âš¡JSX
- stands for javascript xml
- is a syntax extension for JavaScript
- has XML-like Syntax 
- allows embedding JavaScript expressions
- allows component composition

âš¡React.createElement vs JSX
- React.createElement
  - less readable
  - cumbersome and error prone
- JSX
  - enhances readability
  - code closely resembles the final output

âš¡Benefits of JSX
- enhanced readability
- simplicity
- component composition

âš¡Behind the Scenes of JSX
- is converted into React.createElement syntax
- jsx is just syntactic sugar

âš¡Babel & parcel role in JSX
- converts JSX to React.createElement 
- converts modern JS to backward compatible code

âš¡Components
- components are reusable and independent units of code that encapsulate a part of the user interface and it's behaviour
- they are reusable
- the encapsulate the structure and behaviour
- promotes separation of concerns

âš¡Functional Components
- also known as stateless components or presentational components
- are functions that return JSX

âš¡Composing Components
- Component composition refers to the practice of combining multiple smaller components to create more complex and feature-rich user interface (UI) components

âš¡Role of type attribute in script tag? What options can I use there? ðŸŸ¥ 

âš¡{TitleComponent} vs {<TitleComponent/>} vs {<TitleComponent></TitleComponent>}
- first one is how we render a reactElement
- second one is how we render a functional component
- third one is how we render a functional component